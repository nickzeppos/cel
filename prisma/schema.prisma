// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Congress {
  id        String @id @default(cuid())
  congress  Int
  startYear String
  endYear   String
}

model Chambress {
  id       String  @id @default(cuid())
  congress Int
  chamber  Chamber
  Bill     Bill[]

  @@unique([congress, chamber])
}

enum Chamber {
  HOUSE
  SENATE
}

model Member {
  bioguideId  String  @id
  name        String
  party       String
  state       String
  district    Int?
  url         String?
  imageUrl    String?
  attribution String?

  servedHouseStart  Int?
  servedHouseEnd    Int?
  servedSenateStart Int?
  servedSenateEnd   Int?

  spriteRow Int?
  spriteCol Int?
  Bill      Bill[]
}

model Bill {
  id               String            @id @default(cuid())
  billNum          Int
  title            String
  actions          String[]
  committeeActions CommitteeAction[]

  chambressId String
  sponsorId   String

  sponsor   Member    @relation(fields: [sponsorId], references: [bioguideId])
  chambress Chambress @relation(fields: [chambressId], references: [id])

  @@unique([chambressId, billNum])
}

model CommitteeAction {
  id           String  @id @default(cuid())
  committeeId  String
  hasAic       Boolean
  reportedFrom Boolean

  committee Committee @relation(fields: [committeeId], references: [id])
  Bill      Bill?     @relation(fields: [billId], references: [id])
  billId    String?
}

model Committee {
  id              String            @id @default(cuid())
  name            String
  CommitteeAction CommitteeAction[]
}

// @Schema()
// export class Person extends Document {
//   @Prop()
//   bioguide: string
//   @Prop()
//   firstName: string
//   @Prop()
//   lastName: string
//   @Prop()
//   fullName: string
// }

// @Schema()
// export class Term extends Document {
// @Prop(raw({ type: SchemaTypes.ObjectId, ref: 'person' }))
// person: ObjectId
// @Prop()
// party: string
// @Prop()
// state: string
// @Prop()
// district: number
// @Prop(raw({ type: SchemaTypes.ObjectId, ref: 'chambress' }))
// chambress: string
// }
